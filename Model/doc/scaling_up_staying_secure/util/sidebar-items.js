window.SIDEBAR_ITEMS = {"enum":[["ConfigError",""],["LevelFilter","An enum representing the available verbosity level filters of the logger."],["ModelError",""],["UtilError","Errors that can derive from the Util module."]],"fn":[["get_avro_schema","Get the AvroSchema needed to write the files. Is not stable yet."],["init","Initializing the logger."],["norm_dist","Pick from a normal distribution"],["output_graph_to_png","Print the graph in png and dotfile. Provide the model and filename of the dotfile including .dot extension."],["random_percentage","Pick from a normal distribution"],["run_graphviz","A helper function that runs the Graphviz command to convert dot file to png. It uses the Circo algorithm."],["uni_dist","Pick from a uniform distribution"],["write_display_string_to_file","A helper function to write a string to a file"],["write_dot_file","A helper function that creates the dot file and calls the [`write_display_string_to_file`] function."]],"macro":[["debug","Logs a message at the debug level."],["error","Logs a message at the error level."],["info","Logs a message at the info level."],["trace","Logs a message at the trace level."],["warn","Logs a message at the warn level."]],"struct":[["Minutes","A newType regarding minutes"],["Steps","Currently one step = 15 minutes"],["Watt","A newType regarding Watts"],["mHz","A newType regarding milliHertz"],["mVolt","A newType regarding milliVolts"]],"trait":[["StructTraitBound","All Traits that a Struct designating a type needs to fulfil."]],"type":[["BaseFloat","The default float used. As small as possible."],["BaseInt","The default signed integer used. As small as possible."],["BaseUint","The default unsigned integer used. As small as possible."]]};