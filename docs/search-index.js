var searchIndex = JSON.parse('{\
"modelrunner":{"doc":"","t":[5],"n":["main"],"q":["modelrunner"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"scaling_up_staying_secure":{"doc":"Intro","t":[0,0,0,0,5,5,0,4,6,6,8,3,13,6,6,13,3,13,6,6,3,13,6,6,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,12,11,11,11,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,8,3,3,4,8,3,13,13,3,4,3,13,13,3,13,13,3,3,3,3,13,13,3,13,11,12,11,11,11,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,10,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,12,12,12,12,12,12,10,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,6,6,6,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,3,4,13,13,13,13,13,13,13,13,3,8,13,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,14,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["agent","attack","grid","model","run_from_config","run_model","util","AgentKind","AgentList","AgentRef","AgentTrait","Area","Area","AreaList","AreaRef","Connection","Household","Household","HouseholdList","HouseholdRef","Netstation","Netstation","NetstationList","NetstationRef","Root","Root","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary_check","boundary_check","calc_power_from_child","cast","cast","cast","cast","cast","children","children","children","children","children","children","children","children","children","children_mut","children_mut","children_mut","children_mut","children_mut","clean_power_gen","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freq_boundary","freq_boundary","freq_state","freq_state","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_cast","from_cast","from_cast","from_cast","from_cast","from_subset","from_subset","from_subset","from_subset","from_subset","get_avro","get_avro","get_avro","get_avro","get_avro","get_infection_state_children","get_json","get_json","get_json","get_json","get_json","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","into","into","into","into","into","into_bits","into_bits","into_bits","into_bits","into_bits","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind_mut","kind_mut","kind_mut","kind_mut","kind_mut","new","new","new","new","power_gen","power_gen","power_gen_mut","power_gen_mut","power_generation","power_generation","power_generation_mut","powerstate","powerstate","powerstate","powerstate","powerstate","powerstate","powerstate","powerstate","powerstate","powerstate_mut","powerstate_mut","powerstate_mut","powerstate_mut","powerstate_mut","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","serialize","serialize","serialize","serialize","serialize","step","step","step","step","step","step","step","step","step","step_mut","step_mut","step_mut","step_mut","step_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_step","update_step","update_step","update_step","update_step","volt_boundary","volt_boundary","volt_state","volt_state","vzip","vzip","vzip","vzip","vzip","Attack","AttackBehaviour","attack_behaviour","begin","borrow","borrow","borrow_mut","borrow_mut","cast","cast","check_current_attack","clone","clone","clone_into","clone_into","current_attack","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","end","eq","fmt","fmt","from","from","from_bits","from_bits","from_cast","from_cast","from_config","from_subset","from_subset","generation_modifier","infection_rate_per_step","infection_start","infection_stop","init","init","into","into","into_bits","into_bits","is_active","is_in_subset","is_in_subset","modify_infected_devices","patch_rate_per_step","patch_start","patch_stop","percentage_vuln_devices","report_modifier","seed","serialize","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_to_patch_and_infect","type_id","type_id","vzip","vzip","Boundaries","BoundaryAgentTrait","BoundaryBand","BoundaryUnitTrait","FreqState","Grid","GridBoundaryState","GridState","GridWarning","High","Infected","InfectionCount","InfectionState","InfectionStatistics","Low","Normal","NormalBand","NotVulnerable","Patched","PowerGeneration","PowerState","ReservePower","SineParam","TooHigh","TooLow","VoltState","Vulnerable","_test","a","add","add","add_assign","agent_index","agent_powerstate","attack","average_power_usage","b","begin","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary_check","bulk_consumption","c","calc_power","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","check","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","compensate","consumption_noise_param","consumption_param","critical","current_usage","d","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","energy_storage","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freq_state","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_config","from_config_file","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","generation_noise_param","generation_param","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","hash","higher","history","history","history_len","history_len","household_power_consumption_distribution","hs_per_ns","index","infected","infection_state","infectionstatistics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lower","lower_limit","lowerbands","max_gen_inc_tick","max_time_allowed","minimum","mul","mul_assign","n_areas","new","new","new","new","new_no_pv","new_pv","noise_percentage","normalband","not_vulnerable","now","now","ns_per_a","num_noise_functions","partial_cmp","partial_cmp","partial_cmp","patched","percentage_generation_of_usage","percentage_generation_of_usage","percentage_noise_on_power","power_error","power_generated","power_mismatch","power_mismatch","power_mismatch","power_reported","power_used","pv_adoption","separate_by_policy","separate_by_policy","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","state","state","sum","sum","time_passed","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","update_history","upper_limit","upperbands","volt_modifier","volt_state","vulnerable","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watt_per_step","GridInformation","Model","ModelParameters","MyGraph","add_edge","add_node","agents","areas","attack","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","clone","clone_into","content","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","enable_output","fmt","fmt","freq_state","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_cast","from_cast","from_cast","from_cast","from_config","from_subset","from_subset","from_subset","from_subset","get_children","get_dot_string","graph","grid","grid_frequency_compensation","households","infection_statistics","init","init","init","init","into","into","into","into","into_bits","into_bits","into_bits","into_bits","is_in_subset","is_in_subset","is_in_subset","is_in_subset","logfile","logfolder","loglevel","name","netstations","new","output","output_step_agents_avro","output_step_agents_json","output_step_model_avro","output_step_model_json","outputcodec","outputdatafile","outputdatafolder","param","power_state","reserve_power","reserve_power","root","run","seed","serialize","serialize","step","steps","stop_on_freq_error","subagent","test","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_output","update_history","update_step","vzip","vzip","vzip","vzip","BaseFloat","BaseInt","BaseUint","ConfigError","ConfigError","Debug","Error","FileSystemError","FormatError","GraphError","HandlerError","IOError","InfectionError","Info","KeyEmptyError","KeyParsingError","LevelFilter","LoadError","LogStateErrorAvro","LogStateErrorJson","LoggingError","Minutes","ModelError","NeedToStop","NodeIndexError","NotPermittedOption","NumElementsTooLow","Off","ParamError","ParsingError","StatsError","Steps","StructTraitBound","Trace","UtilError","UtilError","UtilError","Warn","Watt","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","debug","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_str","from_str","from_str","from_str","from_str","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","ge","ge","get_avro_schema","get_schema","get_schema","get_schema","get_schema","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","get_schema_in_ctxt","gt","gt","hash","hash","hash","hash","hash","hash","info","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","into_bits","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","le","le","lt","lt","mHz","mVolt","max","minutes_per_step","mul","mul","mul","mul","mul","neg","neg","neg","neg","neg","norm_dist","output_graph_to_png","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","percentage_of_day","provide","provide","provide","random_percentage","run_graphviz","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","separate_by_policy","serialize","serialize","serialize","serialize","serialize","source","source","source","steps_per_day","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","time_of_day","to_level","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uni_dist","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn","write_display_string_to_file","write_dot_file","source","agent","agent","context","msg","source","source","source","source","source","source","source","source"],"q":["scaling_up_staying_secure","","","","","","","scaling_up_staying_secure::agent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","scaling_up_staying_secure::attack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","scaling_up_staying_secure::gridscaling_up_staying_secure::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","scaling_up_staying_secure::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","scaling_up_staying_secure::util::ConfigError","scaling_up_staying_secure::util::ModelError","","","","","","","","scaling_up_staying_secure::util::UtilError","","",""],"d":["Defines the agents that are part of the model and the …","The infection rate, patch rate and behaviour of infected …","All things related to the grid and power can be found here.","Modelling the grid by bringing other parts together …","Run using <code>ModelParameters</code> from a configuration file","Run the model providing the <code>ModelParameters</code>","This module contains handy functions and parts that are …","Agents and results in better readability of the code at …","A vector of the AgentRef type.","This type can be used to indicate a struct that implements …","Implementing this trait lets structs participate in the …","The Area agent. A level below Root and above Netstation.","Area agent represents a larger geographical area.","A vector of the AreaRef type.","The Area struct within an Arc and RwLock.","Connections between other agents","The Household agent. A level below Netstation and lowest …","Represents a single household. It may have a PV system. …","A vector of the HouseholdRef type.","The Household struct within an Arc and RwLock.","The Netstation agent. A level below Area and one above …","Netstation are the local transformers that transform from …","A vector of the NetstationRef type.","The Netstation struct within an Arc and RwLock.","The Root agent. Top-level of the grid and sits above Area.","Root of the Grid","","","","","","","","","","","","","This method is called during a step of the model to …","","","","","","Read access to children field.","","","","","List of children this Agent has according to the graph.","List of children this Agent has according to the graph.","List of children this Agent has according to the graph.","List of children this Agent has according to the graph.","Mutable access to the chlidren field.","","","","","Calculates the power state of the agent, without it being …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gives mutable access to the freq_boundary field.","Frequency boundary of the grid, that needs to be monitored …","Gives mutable access to the freq_state field.","The current frequency and history of the frequency of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Transform the agent to an AVRO representation of itself.","","","","","Get the infection statistics for the children of the …","Transform the agent to a JSON representation of itself.","","","","","","","","","","","","","","","Read access to index field.","","","","","Index used in the graph.","Index used in the graph.","Index used in the graph.","Index used in the graph.","Mutuable access to the index field.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Read access to kind field.","","","","","Kind of agent.","Kind of agent.","Kind of agent.","Kind of agent.","Mutuable access to the kind field.","","","","","Create a new Area agent using the index provided by the …","Creates a new household agent, using the index of the …","Creates a new netstation agent, given the grid parameters …","Creates a new root agent, given the grid parameters and …","Read access to power_generation field.","","Mutable access to power_generation field.","","Read access to the PowerGeneration field.","A Household is the only agent that generates power using a …","Gives mutable access to the PowerGeneration field.","Read access to powerstate field.","","","","","The current power state of the agent. Changes each step.","The current power state of the agent. Changes each step.","The current power state of the agent. Changes each step.","The current power state of the agent. Changes each step.","Mutable access to the powerstate field.","","","","","","","","","","","","","","Read access to step field.","","","","","Current step of the model.","Current step of the model.","Current step of the model.","Current step of the model.","Mutable access to the step field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the step field of the agent.","","","","","Gives mutable access to the volt_boundary field.","Voltage boundary of the grid, that needs to be monitored …","Gives mutable access to the volt_state field.","The current voltage and history of voltage within the …","","","","","","Information on the attack and patching behaviour during …","A step in the behaviour of the attacker. Is generated from …","A list of behaviours that are exhibited by infected units.","When does the attack begin? Inclusive.","","","","","","","Check if in the list of behaviours an attack is present …","","","","","Out of the list of behaviours, defined in AttackBehaviour, …","","","","","","","","","","When does the attack end? Not inclusive.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Create an Attack struct of the given filepath. Allows for …","","","Percentage modifier of the generation field. 1.0 is normal …","Percentage of infections per step.","Starting step of the infection.","Last step of the infection.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Is this substep active on this step? Does not include the …","","","Modify the infected households using the attack behaviour.","Percentage of patched devices per step.","Starting step of patching.","Last step of patching.","Percentage of PowerGeneration units that are vulnerable to …","Percentage modifier of the report field. 1.0 is normal …","A seed to power the rng generators that are used to …","","","","","","","","","","","","","Tries to patch vulnerable or infected <code>PowerGeneration</code> …","","","","","A struct describing the boundaries that are set for type …","A helper trait to enable checking the boundaries","Restriction on the grid. How long may the grid pass the …","Helper trait, to implement on the units used in the …","Frequency state of an agent. With frequency, this is only …","Struct that defines the grid parameters","The state the grid is in.","A trait to be implemented for the grid states. Gives an …","The warning returned if the grid is outside normal …","","Currently infected by malware.","A helper struct to determine the state of the grid.","All possible states that a PV system can have regarding …","A helper struct to determine the statistics on the …","","","What is considered normal behaviour of this parameter? …","Can not be infected.","Not infected but was previously infected before being …","Contains the power generation information for a household.","A struct containing the power state of an agent.","Grid energy storage, that can be used to regulate.","Contains the parameters of the sine function that create …","","","Voltage state of an agent. With voltage, these are the …","Can be infected.","Creates a test version to be used for testing within the …","Amplitude","","","","Index of the agent that created the warning.","The powerstate of the agent.","Attack the PowerState using the AttackBehaviour given.","Average power consumption","Period. 0 -&gt; 1. Not 0 to 2PI.","when to start","The border value, that the value must pass to trigger this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check the boundary and get a warning/error if needed.","Bulk consumption, i.e. factories","Horizontal shift. Position of the peak.","Calculates the power of the unit. Both the noise and power …","","","","","","","","","","","","","","","","Check if the restriction is active, give the state of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is the given value within the normal behaviour, or …","Try to compensate the power mismatch with the available …","The noise parameters given to this PowerGeneration unit.","The usage parameters that create the power consumed per …","Has the restriction overstepped its maximum allowed time …","How much of that room is currently in use?","Vertical shift. Average consumption throughout the day.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","when to end","Energy regulating room in W","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The frequency state of the agent.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a Grid struct of the given file path. Allows for an …","Creates boundary from a config file.","","","","","","","","","","","","","","","","The noise parameters given to this PowerGeneration unit.","the generation parameters that create the power generated …","","","","","","","","","","","","","","","","","","","","","","Higher limit of this GridParameter.","History of the values.","History of the values.","How much history is kept?","How much history is kept?","The normal distribution parameters that determine …","Bounds for the number of households per netstation. …","The index of the household associated with the power …","Currently infected by malware.","Current state of infection. Also, the indication of the …","InfectionStatistics","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lower limit of this GridParameter.","How much power can the grid operator let produce less in …","HashMap of boundary value and max permittable steps.","Max energy generation in W per time tick","How many steps can the value pass the border before the …","minimum value allowed","","","Number of areas","Create a new state.","","Creates a default <code>PowerState</code>. Needs to init before usage.","","Creates a power generation unit for a house that only …","Create a new PV power generation unit. Assumes that a …","Amount of noise in relation to the average power …","Normal value","Can not be infected.","Current value","Current value","Bounds for the number of netstation per area. Intended to …","Amount of noise functions per PowerGeneration unit.","","","","Not infected but was previously infected before being …","The percentage of power with regards to the average …","The percentage of power with regards to the average …","Percentage of noise function based on the total power …","Current error between power used and power reported.","Power that is generated","Calculate the impact of the power_mismatch. Gives back the …","","","Current amount of power being reported to be used. …","Current amount of power measured. Positive indicates a …","Percentage of PV adoption by households i.e. chance of a …","","","","","","","","","","","","","","","","","Current State of the grid","The state the grid is in.","","","How many steps have already been had past the border?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the state with its new value.","Update the boundary and check all the relevant …","","","Update the history of the unit using internal data.","How much power can the grid operator let produce more in …","HashMap of boundary value and max permittable steps.","Impact of voltage due to power mismatch. Linear assumption.","The voltage state of the agent.","Can be infected.","","","","","","","","","","","","","","","","How much of that room can be used in a single step?","","Struct for creating and running a model based on the …","Struct that defines the model parameters","A newtype struct for encapsulating the graph. It defines …","Directed edge add","Add node. Return index <code>BaseUint</code>","The list of agents in the model.","A list of Area agents that are part of the model","The attack struct of this model. See Attack.","","","","","","","","","","","","","","","Inner graph","","","","","","","","","","","","","","","","","Enable the output of the node states per step.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Create the <code>ModelParameters</code> from a “ModelParameters.ini”","","","","","Get children from graph using the graph index of the …","Provide the dotstring from the inner graph.","The graph of the model","The Grid struct of this model. See Grid.","Try to compensate for the power mismatch on the Root node.","A list of Household agents that are part of the model.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Chrono - format string to determine the filename. link","Folder to store logs","The log level of the executable.","Naming for the model. Used for logs etc.","A list of Netstation agents that are part of the model.","Creating the graph and agents and adding agents to the …","Output the model in its current state.","Output the state of the model in avro format by …","Transforms the vector of agents to a vector of JSON values …","Log the state of the model in this step.","Log the state of the model in this step.","The codec that is used. Currently supported: “snappy”, …","Chrono - format string to determine the filename. link","Folder to store the output","The parameters of the model. See ModelParameters","","ReservePower","","The Root agent of the model.","Run the model. Generates the outcome by calling the step …","Seed for the random generators, same behaviour between runs","","","Take the next step in the model. A step is also called a …","Number of steps in the Model","Stop running the model when there is a grid frequency …","Create a vector that copies the Arc of the agents with the …","Creates a test version to be used for testing within the …","","","","","","","","","","","","","","","","","","","","","","Type of output, avro or json.","Update the history of the agents given.","Update step","","","","","The default float used. As small as possible.","The default signed integer used. As small as possible.","The default unsigned integer used. As small as possible.","","","Corresponds to the <code>Debug</code> log level.","Corresponds to the <code>Error</code> log level.","","","","","","","Corresponds to the <code>Info</code> log level.","","","An enum representing the available verbosity level filters …","","","","","A newType regarding minutes","","","","","","A level lower than all log levels.","","","","Currently one step = 15 minutes","All Traits that a Struct designating a type needs to …","Corresponds to the <code>Trace</code> log level.","Errors that can derive from the Util module.","","","Corresponds to the <code>Warn</code> log level.","A newType regarding Watts","","","","","","","","","","","","","","","","","","","","","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the debug level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the error level.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the AvroSchema needed to write the files. Is not …","","","","","","","","","","","","","","","","","Logs a message at the info level.","Initializing the logger.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Iterate through all supported filtering levels.","","","","","A newType regarding milliHertz","A newType regarding milliVolts","Returns the most verbose logging level filter.","Returns the current minutes per Step of the model.","","","","","","","","","","","Pick from a normal distribution","Print the graph in png and dotfile. Provide the model and …","","","","","","","","Returns the percentage of the day passed.","","","","Pick from a normal distribution","A helper function that runs the Graphviz command to …","","","","","","","","","","","","","","","","","","Amount of steps per day. Helper function.","","","","","","","","","","","","","","","","Amount of minutes on the last day.","Converts <code>self</code> to the equivalent <code>Level</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pick from a uniform distribution","","","","","","","","","","Logs a message at the warn level.","A helper function to write a string to a file","A helper function that creates the dot file and calls the …","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,13,0,13,0,0,0,13,0,0,0,13,11,12,6,9,13,11,12,6,9,13,6,9,79,11,12,6,9,13,79,11,12,6,9,11,12,6,9,79,11,12,6,9,12,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,13,13,11,11,12,12,6,6,9,9,13,9,9,9,9,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,79,11,12,6,9,6,79,11,12,6,9,11,12,6,9,13,11,12,6,9,13,79,11,12,6,9,11,12,6,9,79,11,12,6,9,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,79,11,12,6,9,11,12,6,9,79,11,12,6,9,11,12,6,9,79,12,79,12,12,12,12,79,11,12,6,9,11,12,6,9,79,11,12,6,9,11,12,6,9,11,12,6,9,13,79,11,12,6,9,11,12,6,9,79,11,12,6,9,11,12,6,9,13,11,12,6,9,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,11,12,6,9,13,79,11,12,6,9,6,6,6,6,11,12,6,9,13,0,0,35,36,35,36,35,36,35,36,35,35,36,35,36,35,36,35,36,35,36,35,36,35,36,36,36,35,36,35,36,35,36,35,36,35,35,36,36,35,35,35,35,36,35,36,35,36,36,35,36,35,35,35,35,35,36,35,35,36,35,36,35,36,35,36,35,36,35,36,35,35,36,35,36,0,0,0,0,0,0,0,0,0,44,49,0,0,0,44,44,0,49,49,0,0,0,0,44,44,0,49,28,47,40,29,29,7,7,29,27,47,47,42,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,80,28,47,27,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,44,46,48,27,27,7,48,47,46,19,44,48,20,40,21,29,34,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,47,28,42,46,19,44,27,47,48,49,40,21,29,28,42,46,19,44,48,49,40,42,46,19,44,7,27,47,48,20,20,49,40,21,29,29,34,28,7,42,46,19,19,19,44,7,27,47,48,20,49,40,40,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,28,19,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,27,27,42,46,19,44,27,47,20,49,29,34,42,46,19,44,27,47,20,49,29,34,49,46,20,34,20,34,28,28,27,40,27,7,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,46,48,19,28,42,47,47,47,28,81,20,29,34,27,27,27,19,40,20,34,28,28,44,49,29,40,27,28,28,29,29,81,20,34,29,29,28,20,29,42,46,19,44,7,27,47,48,20,49,21,29,34,28,19,7,40,29,42,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,20,29,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,81,19,20,34,29,48,19,28,7,40,42,46,19,44,7,27,47,48,20,49,40,21,29,34,28,48,0,0,0,0,60,60,62,62,5,62,5,60,61,62,5,60,61,62,5,60,61,61,61,60,60,62,5,60,60,61,62,5,60,60,61,61,62,5,60,61,5,5,61,61,62,5,60,61,62,5,60,61,62,5,60,61,5,62,5,60,61,60,60,62,5,62,62,61,62,5,60,61,62,5,60,61,62,5,60,61,62,5,60,61,5,5,5,5,62,62,62,62,62,62,62,5,5,5,62,61,62,61,62,62,5,5,61,62,5,5,62,5,61,62,5,60,61,62,5,60,61,62,5,60,61,62,5,60,61,62,5,60,61,5,62,62,62,5,60,61,0,0,0,0,3,65,65,58,58,3,3,58,3,65,39,39,0,39,3,3,58,0,0,3,3,39,39,65,3,39,58,0,0,65,0,39,3,65,0,54,55,63,50,32,54,55,63,50,32,54,55,63,50,32,54,55,63,50,32,65,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,54,55,63,50,32,65,54,55,63,50,32,65,54,55,63,50,32,0,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,54,55,63,50,32,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,65,54,55,63,50,32,65,54,55,63,50,32,0,65,65,58,58,39,39,3,3,54,54,55,55,63,63,50,50,32,32,65,58,58,58,58,58,39,39,3,3,3,3,3,3,54,54,55,55,63,63,50,50,32,32,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,65,0,54,55,50,32,54,55,50,32,65,65,65,54,55,63,50,32,0,0,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,65,65,65,65,0,0,65,32,54,55,63,50,32,54,55,63,50,32,0,0,65,65,54,55,63,50,32,32,58,39,3,0,0,65,58,39,3,54,55,63,50,32,54,55,63,50,32,58,39,3,32,54,55,63,50,32,54,55,63,50,32,54,55,63,50,32,32,65,65,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,0,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,65,58,39,3,54,55,63,50,32,0,65,58,39,3,54,55,63,50,32,0,0,0,82,83,84,85,85,83,84,86,87,88,89,90,91],"f":[0,0,0,0,[[[2,[1]]],[[4,[3]]]],[5,[[4,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[8,[7]]]],[9,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[11,10],[12,10],[6,10],[9,10],0,0,0,0,[[],10],[11,10],[12,10],[6,10],[9,10],[12],[11,11],[12,12],[6,6],[9,9],[13,13],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[4,[11]]]],[[],[[4,[12]]]],[[],[[4,[6]]]],[[],[[4,[9]]]],[[],[[4,[13]]]],[14],[14],[14],[14],[14],[[13,13],15],[[],15],[[11,16],[[4,[17]]]],[[11,16],[[4,[17]]]],[[12,16],[[4,[17]]]],[[12,16],[[4,[17]]]],[[6,16],[[4,[17]]]],[[6,16],[[4,[17]]]],[[9,16],[[4,[17]]]],[[9,16],[[4,[17]]]],[[13,16],18],[9,19],0,[9,20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[3]]]],[11,[[4,[3]]]],[12,[[4,[3]]]],[6,[[4,[3]]]],[9,[[4,[3]]]],[6,21],[[],[[4,[[23,[22]],3]]]],[11,[[4,[[23,[22]],3]]]],[12,[[4,[[23,[22]],3]]]],[6,[[4,[[23,[22]],3]]]],[9,[[4,[[23,[22]],3]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[],26],[11,26],[12,26],[6,26],[9,26],0,0,0,0,[[],26],[11,26],[12,26],[6,26],[9,26],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],13],[11,13],[12,13],[6,13],[9,13],0,0,0,0,[[],13],[11,13],[12,13],[6,13],[9,13],[26,11],[[26,27],12],[[26,28],6],[[26,28],9],[[],[[8,[27]]]],[12,[[8,[27]]]],[[],[[8,[27]]]],[12,[[8,[27]]]],[12,27],0,[12,27],[[],29],[11,29],[12,29],[6,29],[9,29],0,0,0,0,[[],29],[11,29],[12,29],[6,29],[9,29],[30,31],[30,31],[30,31],[30,31],[11,4],[12,4],[6,4],[9,4],[13,4],[[],32],[11,32],[12,32],[6,32],[9,32],0,0,0,0,[[],32],[11,32],[12,32],[6,32],[9,32],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],33],[[],33],[[],33],[[],33],[[],33],[32],[[11,32]],[[12,32]],[[6,32]],[[9,32]],[6,19],0,[6,34],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[35,32]],[35,35],[36,36],[[]],[[]],0,[[],36],[14],[14],[14],[14],[[],[[4,[35]]]],[[],[[4,[36]]]],[14],[14],0,[[36,36],15],[[35,16],18],[[36,16],18],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],37,38],[[4,[35,39]]]],[[]],[[]],0,0,0,0,[[],14],[[],14],[[]],[[]],[[]],[[]],[[36,32],15],[[],15],[[],15],[[35,23]],0,0,0,0,0,0,[35,4],[36,4],[[]],[[]],[[],8],[[],8],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[35,23]],[[],33],[[],33],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],28],0,[[40,40],40],[[29,29]],[[29,29]],0,0,[[29,36]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[7]]]],0,0,[[27,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[41]],41,43],44],[[[42,[[0,[45,41]]]]],[[42,[[0,[45,41]]]]]],[[[46,[[0,[45,41]]]]],[[46,[[0,[45,41]]]]]],[[[19,[[0,[45,41]]]]],[[19,[[0,[45,41]]]]]],[44,44],[7,7],[27,27],[47,47],[48,48],[20,20],[49,49],[40,40],[21,21],[29,29],[34,34],[28,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44],43],[[[46,[41]],41],43],[[48,50],50],0,0,0,0,0,[[],[[46,[[0,[51,41]]]]]],[[],[[19,[[0,[51,41]]]]]],[[],44],[[],48],[[],20],[[],40],[[],21],[[],29],[[],34],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[4,[42]]]],[[],[[4,[46]]]],[[],[[4,[19]]]],[[],[[4,[44]]]],[[],[[4,[7]]]],[[],[[4,[27]]]],[[],[[4,[47]]]],[[],[[4,[48]]]],[[],[[4,[20]]]],[[],[[4,[49]]]],[[],[[4,[21]]]],[[],[[4,[29]]]],[[],[[4,[34]]]],[[],[[4,[28]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],0,0,[[[42,[[0,[52,41]]]],42],15],[[[46,[[0,[52,41]]]],46],15],[[[19,[[0,[52,41]]]],19],15],[[44,44],15],[[27,27],15],[[47,47],15],[[48,48],15],[[49,49],15],[[40,40],15],[[21,21],15],[[29,29],15],[[28,28],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[42,[[0,[53,41]]]],16],18],[[[46,[[0,[53,41]]]],16],18],[[[19,[[0,[53,41]]]],16],18],[[44,16],18],[[7,16],18],[[27,16],18],[[47,16],18],[[48,16],18],[[20,16],18],[[20,16],18],[[49,16],18],[[40,16],18],[[21,16],18],[[29,16],18],[[29,16],18],[[34,16],18],[[28,16],18],0,[[]],[[]],[28,[[19,[54]]]],[[]],[28,[[19,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,40],[27,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],37],[[4,[28,39]]]],[[[2,[1]],37],[[4,[[19,[41]],39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[[25,8],24],[49],0,0,0,0,0,0,0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,[[47,56],47],[[47,56]],0,[28],[28,20],[[],29],[28,34],[[[8,[57]],5],[[4,[27,58]]]],[[[8,[57]],5],[[4,[27,58]]]],0,0,0,0,0,0,0,[[44,44],[[8,[43]]]],[[49,49],[[8,[43]]]],[[29,29],[[8,[43]]]],0,0,0,0,0,0,[[50,50,50]],[[20,50,50,50],54],[[34,50,50,50],55],0,0,0,[30,31],[30,31],[42,4],[46,4],[19,4],[44,4],[7,4],[27,4],[47,4],[48,4],[20,4],[49,4],[21,4],[29,4],[34,4],[28,4],0,0,[59,40],[[],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[[19,[41]],41],[[8,[7]]]],[[20,54]],[[34,55]],[29],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[60,26,26],[[4,[3]]]],[[60,13,26],[[4,[3]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[[]],0,[[],60],[14],[14],[60],[14],[14],[14],[14],[14],[60],[14],[[],[[4,[61]]]],[14],[14],[14],[14],0,[[5,16],18],[[61,16],18],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[4,[5,39]]]],[[]],[[]],[[]],[[]],[[60,57],[[4,[[23,[57]],3]]]],[60,31],0,0,[62],0,0,[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,[5,[[4,[62,3]]]],[[62,32,23],[[4,[3]]]],[10,23],[10,[[23,[[23,[22]]]]]],[[5,32,23,23]],[[5,32,[23,[[23,[22]]]],23]],0,0,0,0,0,0,0,0,[62,[[4,[3]]]],0,[5,4],[61,4],[[62,32],[[4,[3]]]],0,0,[[13,10],10],[[],5],[[]],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],33],[[],33],[[],33],[[],33],0,[10],[[10,32]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[54,54],54],[[55,55],55],[[63,63],63],[[50,50],50],[[32,32],32],[[54,54]],[[55,55]],[[63,63]],[[50,50]],[[32,32]],[54,57],[55,57],[63,57],[50,64],[32,57],[54,57],[55,57],[63,57],[50,64],[32,57],[65,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[54,54],[55,55],[63,63],[50,50],[32,32],[[]],[[]],[[]],[[]],[[]],[[]],[[65,65],43],[[54,54],43],[[55,55],43],[[63,63],43],[[50,50],43],[[32,32],43],0,[[],54],[[],55],[[],63],[[],50],[[],32],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[4,[54]]]],[[],[[4,[55]]]],[[],[[4,[63]]]],[[],[[4,[50]]]],[[],[[4,[32]]]],[54,54],[55,55],[63,63],[50,50],[32,32],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[65,66],15],[[65,65],15],[[54,54],15],[[55,55],15],[[63,63],15],[[50,50],15],[[32,32],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[65,16],[[4,[17]]]],[[65,16],[[4,[17]]]],[[58,16],18],[[58,16],18],[[39,16],18],[[39,16],18],[[3,16],18],[[3,16],18],[[54,16],18],[[54,16],18],[[55,16],18],[[55,16],18],[[63,16],18],[[63,16],18],[[50,16],18],[[50,16],18],[[32,16],18],[[32,16],18],[[]],[67,58],[[]],[17,58],[68,58],[69,58],[58,39],[[]],[70,3],[71,3],[58,3],[67,3],[39,3],[[]],[57,54],[[]],[[]],[57,55],[[]],[57,63],[[]],[64,50],[[]],[63,32],[57,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[4,[65]]]],[37,[[4,[54]]]],[37,[[4,[55]]]],[37,[[4,[63]]]],[37,[[4,[50]]]],[37,[[4,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,66],15],[[65,65],15],[[],24],[[],24],[[],24],[[],24],[[],24],[[25,72],24],[[25,72],24],[[25,72],24],[[25,72],24],[[65,66],15],[[65,65],15],[65],[54],[55],[63],[50],[32],0,[5,[[4,[58]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],59],[[65,66],15],[[65,65],15],[[65,65],15],[[65,66],15],0,0,[[],65],[[],63],[54,54],[55,55],[63,63],[50,50],[32,32],[54,54],[55,55],[63,63],[50,50],[32,32],[[73,73,74],[[4,[73,58]]]],[60,[[4,[58]]]],[[65,65],[[8,[43]]]],[[65,66],[[8,[43]]]],[[54,54],[[8,[43]]]],[[55,55],[[8,[43]]]],[[63,63],[[8,[43]]]],[[50,50],[[8,[43]]]],[[32,32],[[8,[43]]]],[32,75],[76],[76],[76],[74,73],[[],[[4,[58]]]],[30,31],[30,31],[30,31],[30,31],[30,31],[30,31],[30,31],[30,31],[30,31],[54,4],[55,4],[63,4],[50,4],[32,4],[58,[[8,[77]]]],[39,[[8,[77]]]],[3,[[8,[77]]]],[[],32],[[54,54],54],[[55,55],55],[[63,63],63],[[50,50],50],[[32,32],32],[[54,54]],[[55,55]],[[63,63]],[[50,50]],[[32,32]],[59,54],[59,55],[59,63],[59,50],[59,32],[32,63],[65,[[8,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[74,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[78,[[4,[58]]]],[60,[[4,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Path"],[8,"AsRef"],[4,"ModelError"],[4,"Result"],[3,"ModelParameters"],[3,"Netstation"],[3,"GridWarning"],[4,"Option"],[3,"Root"],[6,"AgentList"],[3,"Area"],[3,"Household"],[4,"AgentKind"],[15,"usize"],[15,"bool"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"Boundaries"],[3,"FreqState"],[3,"InfectionStatistics"],[15,"u8"],[3,"Vec"],[4,"Schema"],[3,"HashMap"],[6,"BaseUint"],[3,"PowerGeneration"],[3,"Grid"],[3,"PowerState"],[3,"SeparatorPolicy"],[3,"String"],[3,"Steps"],[3,"TypeId"],[3,"VoltState"],[3,"Attack"],[3,"AttackBehaviour"],[15,"str"],[15,"u64"],[4,"ConfigError"],[3,"InfectionCount"],[8,"BoundaryUnitTrait"],[3,"BoundaryBand"],[4,"Ordering"],[4,"GridBoundaryState"],[8,"Clone"],[3,"NormalBand"],[3,"SineParam"],[3,"ReservePower"],[4,"InfectionState"],[3,"Watt"],[8,"Default"],[8,"PartialEq"],[8,"Debug"],[3,"mHz"],[3,"mVolt"],[8,"Copy"],[6,"BaseInt"],[4,"UtilError"],[8,"Iterator"],[3,"MyGraph"],[3,"GridInformation"],[3,"Model"],[3,"Minutes"],[15,"i64"],[4,"LevelFilter"],[4,"Level"],[4,"LogError"],[3,"Error"],[4,"StatsError"],[3,"JoinError"],[3,"ParseIntError"],[6,"Namespace"],[6,"BaseFloat"],[3,"SmallRng"],[15,"f32"],[3,"Demand"],[8,"Error"],[8,"Display"],[8,"AgentTrait"],[8,"BoundaryAgentTrait"],[8,"GridState"],[13,"UtilError"],[13,"LogStateErrorAvro"],[13,"LogStateErrorJson"],[13,"ParamError"],[13,"UtilError"],[13,"ConfigError"],[13,"StatsError"],[13,"IOError"],[13,"LoggingError"],[13,"FormatError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
